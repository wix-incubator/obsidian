"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[5539],{5680:(e,n,t)=>{t.d(n,{xA:()=>p,yg:()=>g});var a=t(6540);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=a.createContext({}),c=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},p=function(e){var n=c(e.components);return a.createElement(s.Provider,{value:n},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(t),m=o,g=d["".concat(s,".").concat(m)]||d[m]||u[m]||i;return t?a.createElement(g,r(r({ref:n},p),{},{components:t})):a.createElement(g,r({ref:n},p))}));function g(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,r=new Array(i);r[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[d]="string"==typeof e?e:o,r[1]=l;for(var c=2;c<i;c++)r[c]=t[c];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},9365:(e,n,t)=>{t.d(n,{A:()=>r});var a=t(6540),o=t(53);const i={tabItem:"tabItem_Ymn6"};function r(e){let{children:n,hidden:t,className:r}=e;return a.createElement("div",{role:"tabpanel",className:(0,o.A)(i.tabItem,r),hidden:t},n)}},4865:(e,n,t)=>{t.d(n,{A:()=>u});var a=t(8168),o=t(6540),i=t(53),r=t(2303),l=t(1682),s=t(6976),c=t(3104);const p={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function d(e){const{lazy:n,block:t,defaultValue:r,values:d,groupId:u,className:m}=e,g=o.Children.map(e.children,(e=>{if((0,o.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),y=d??g.map((e=>{let{props:{value:n,label:t,attributes:a}}=e;return{value:n,label:t,attributes:a}})),h=(0,l.X)(y,((e,n)=>e.value===n.value));if(h.length>0)throw new Error(`Docusaurus error: Duplicate values "${h.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const b=null===r?r:r??g.find((e=>e.props.default))?.props.value??g[0].props.value;if(null!==b&&!y.some((e=>e.value===b)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${b}" but none of its children has the corresponding value. Available values are: ${y.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:f,setTabGroupChoices:v}=(0,s.x)(),[j,w]=(0,o.useState)(b),N=[],{blockElementScrollPositionUntilNextRender:C}=(0,c.a_)();if(null!=u){const e=f[u];null!=e&&e!==j&&y.some((n=>n.value===e))&&w(e)}const x=e=>{const n=e.currentTarget,t=N.indexOf(n),a=y[t].value;a!==j&&(C(n),w(a),null!=u&&v(u,String(a)))},O=e=>{let n=null;switch(e.key){case"Enter":x(e);break;case"ArrowRight":{const t=N.indexOf(e.currentTarget)+1;n=N[t]??N[0];break}case"ArrowLeft":{const t=N.indexOf(e.currentTarget)-1;n=N[t]??N[N.length-1];break}}n?.focus()};return o.createElement("div",{className:(0,i.A)("tabs-container",p.tabList)},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":t},m)},y.map((e=>{let{value:n,label:t,attributes:r}=e;return o.createElement("li",(0,a.A)({role:"tab",tabIndex:j===n?0:-1,"aria-selected":j===n,key:n,ref:e=>N.push(e),onKeyDown:O,onClick:x},r,{className:(0,i.A)("tabs__item",p.tabItem,r?.className,{"tabs__item--active":j===n})}),t??n)}))),n?(0,o.cloneElement)(g.filter((e=>e.props.value===j))[0],{className:"margin-top--md"}):o.createElement("div",{className:"margin-top--md"},g.map(((e,n)=>(0,o.cloneElement)(e,{key:n,hidden:e.props.value!==j})))))}function u(e){const n=(0,r.A)();return o.createElement(d,(0,a.A)({key:String(n)},e))}},8023:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>s,default:()=>g,frontMatter:()=>l,metadata:()=>c,toc:()=>d});var a=t(8168),o=(t(6540),t(5680)),i=t(4865),r=t(9365);const l={sidebar_position:1},s="Introduction",c={unversionedId:"documentation/documentation",id:"documentation/documentation",title:"Introduction",description:"Obsidian is a dependency injection container with first-class support for React and React Native applications.",source:"@site/docs/documentation/documentation.mdx",sourceDirName:"documentation",slug:"/documentation/",permalink:"/obsidian/docs/documentation/",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/documentation/documentation.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docs2",next:{title:"Installation",permalink:"/obsidian/docs/documentation/installation"}},p={},d=[{value:"The 2 steps tutorial for injecting dependencies with Obsidian",id:"the-2-steps-tutorial-for-injecting-dependencies-with-obsidian",level:2},{value:"Step 1: Declare how dependencies should be created",id:"step-1-declare-how-dependencies-should-be-created",level:3},{value:"Step 2: Inject the dependencies",id:"step-2-inject-the-dependencies",level:3},{value:"Features",id:"features",level:2},{value:"Design principles",id:"design-principles",level:2}],u={toc:d},m="wrapper";function g(e){let{components:n,...t}=e;return(0,o.yg)(m,(0,a.A)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"introduction"},"Introduction"),(0,o.yg)("p",null,"Obsidian is a dependency injection container with first-class support for React and React Native applications."),(0,o.yg)("p",null,"Get started by ",(0,o.yg)("strong",{parentName:"p"},"following the installation guide")," bellow. Or ",(0,o.yg)("strong",{parentName:"p"},"try Obsidian immediately")," in the ",(0,o.yg)("strong",{parentName:"p"},(0,o.yg)("a",{parentName:"strong",href:"/playground"},"Online Playground")),"."),(0,o.yg)("h2",{id:"the-2-steps-tutorial-for-injecting-dependencies-with-obsidian"},"The 2 steps tutorial for injecting dependencies with Obsidian"),(0,o.yg)("h3",{id:"step-1-declare-how-dependencies-should-be-created"},"Step 1: Declare how dependencies should be created"),(0,o.yg)("p",null,"Define a singleton graph that is instantiated once and is retained throughout the lifespan of the application. All dependencies it provides are also singletons. The graph bellow provides two dependencies that can be injected: ",(0,o.yg)("inlineCode",{parentName:"p"},"fooService")," and ",(0,o.yg)("inlineCode",{parentName:"p"},"barManager"),"."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-ts",metastring:'title="A singleton graph that provides two dependencies"',title:'"A',singleton:!0,graph:!0,that:!0,provides:!0,two:!0,'dependencies"':!0},"import {Singleton, Graph, ObjectGraph, Provides} from 'react-obsidian';\n\n\n@Singleton() @Graph()\nexport class ApplicationGraph extends ObjectGraph {\n\n // fooService requires a barManager so it receives one as a parameter.\n  @Provides()\n  fooService(barManager: BarManager): FooService {\n    return new FooService(barManager);\n  }\n\n\n  @Provides()\n  barManager(): BarManager {\n    return new BarManager();\n  }\n}\n")),(0,o.yg)("h3",{id:"step-2-inject-the-dependencies"},"Step 2: Inject the dependencies"),(0,o.yg)("p",null,"Obsidian can inject dependencies into components, hooks, and classes."),(0,o.yg)(i.A,{mdxType:"Tabs"},(0,o.yg)(r.A,{value:"functionalComponent",label:"Functional component injection",default:!0,mdxType:"TabItem"},(0,o.yg)("p",null,"Injecting React functional components essentially revolves around two things: declaring the required dependencies in the components's props and exporting an injected component using the ",(0,o.yg)("inlineCode",{parentName:"p"},"injectComponent")," function."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-ts",metastring:'title="MyComponent.tsx"',title:'"MyComponent.tsx"'},"import {DependenciesOf, injectComponent} from 'react-obsidian';\nimport {ApplicationGraph} from './ApplicationGraph';\n\n// 1. Declare which dependencies should be injected.\ntype Props = DependenciesOf<ApplicationGraph, 'fooService'>; // {fooService: FooService}\n\n// 2. Implement the component.\nconst myComponent = ({fooService}: Props) => {\n  // Do something useful with fooService\n}\n\n// 3. Export the injected component.\nexport default injectComponent(myComponent, ApplicationGraph);\n")),(0,o.yg)("p",null,"Now we can use the injected component without providing its dependencies manually:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-tsx",metastring:'title="SomeComponent.tsx"',title:'"SomeComponent.tsx"'},"import MyComponent from './MyComponent';\n\nconst SomeComponent = () => {\n  // 4. Render the component - its dependencies are resolved automatically by Obsidian.\n  return <MyComponent />;\n}\n"))),(0,o.yg)(r.A,{value:"hook",label:"Hook injection",mdxType:"TabItem"},(0,o.yg)("p",null,"Hooks are injected in a similar way to functional components. The only difference is that the ",(0,o.yg)("inlineCode",{parentName:"p"},"injectHook")," function is used instead of ",(0,o.yg)("inlineCode",{parentName:"p"},"injectComponent"),"."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-ts",metastring:'title="MyHook.ts"',title:'"MyHook.ts"'},"import {DependenciesOf, injectHook} from 'react-obsidian';\nimport {ApplicationGraph} from './ApplicationGraph';\n\n// 1. Declare which dependencies should be injected.\ntype Props = DependenciesOf<ApplicationGraph, 'fooService'>; // {fooService: FooService}\n\n// 2. Implement the hook.\nconst myHook = ({fooService}: Props) => {\n  // Do something useful with fooService\n}\n\n// 3. Export the injected hook.\nexport default injectHook(myHook, ApplicationGraph);\n")),(0,o.yg)("p",null,"The injected hook can be used without providing its dependencies manually:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-tsx",metastring:'title="SomeComponent.tsx"',title:'"SomeComponent.tsx"'},"import myHook from './MyHook';\n\nconst SomeComponent = () => {\n  // 4. Use the hook without providing any dependencies manually - they are injected automatically.\n  myHook();\n\n  return <>Obsidian is awesome!</>;\n}\n"))),(0,o.yg)(r.A,{value:"classComponent",label:"Class component injection",mdxType:"TabItem"},(0,o.yg)("p",null,"To inject a class, annotate it with the ",(0,o.yg)("inlineCode",{parentName:"p"},"@Injectable")," decorator. The ",(0,o.yg)("inlineCode",{parentName:"p"},"@Injectable")," decorator takes a single parameter - the graph that should be used to resolve the dependencies. Declare the dependencies as class members and annotate them with the ",(0,o.yg)("inlineCode",{parentName:"p"},"@Inject")," decorator."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-ts",metastring:'title="MyComponent.tsx"',title:'"MyComponent.tsx"'},"import {Injectable, Inject} from 'react-obsidian';\nimport {ApplicationGraph} from './ApplicationGraph';\n\n@Injectable(ApplicationGraph)\nexport MyClassComponent extends React.Component {\n  @Inject() private fooService!: FooService;\n\n}\n")),(0,o.yg)("p",null,"Render the injected component. Obsidian resolves the required dependencies automatically."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-tsx",metastring:'title="SomeComponent.tsx"',title:'"SomeComponent.tsx"'},"import MyComponent from './MyComponent';\n\nconst SomeComponent = () => {\n  // 4. Render the component - its dependencies are resolved automatically by Obsidian.\n  return <MyComponent />;\n}\n"))),(0,o.yg)(r.A,{value:"class",label:"Class constructor injection",mdxType:"TabItem"},(0,o.yg)("p",null,"To inject a class, annotate it with the ",(0,o.yg)("inlineCode",{parentName:"p"},"@Injectable")," decorator. The ",(0,o.yg)("inlineCode",{parentName:"p"},"@Injectable")," decorator takes a single parameter - the graph that should be used to resolve the dependencies.\nDeclare the dependencies as constructor parameters and annotate them with the ",(0,o.yg)("inlineCode",{parentName:"p"},"@Inject")," decorator."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-ts",metastring:'title="MyClass.tsx"',title:'"MyClass.tsx"'},"import {Injectable, Inject} from 'react-obsidian';\nimport {ApplicationGraph} from './ApplicationGraph';\n\n@Injectable(ApplicationGraph)\nexport MyClass {\n  constructor (fooService?: FooService);\n  constructor(@Inject() private fooService: FooService) { }\n}\n")),(0,o.yg)("p",null,"Now we can use the injected class without providing its dependencies manually:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-ts"},"const myClass = new MyClass();\n")),(0,o.yg)("p",null,"Of course, passing dependencies explicitly is still possible:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-ts"},"const myClass = new MyClass(new FooService());\n")))),(0,o.yg)("hr",null),(0,o.yg)("h2",{id:"features"},"Features"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"\u269b\ufe0f Inject all React constructs",(0,o.yg)("ul",{parentName:"li"},(0,o.yg)("li",{parentName:"ul"},"Functional components"),(0,o.yg)("li",{parentName:"ul"},"Hooks"),(0,o.yg)("li",{parentName:"ul"},"Class components"))),(0,o.yg)("li",{parentName:"ul"},"\ud83d\udee0 Improve code structure",(0,o.yg)("ul",{parentName:"li"},(0,o.yg)("li",{parentName:"ul"},"Easily write object-oriented code with Single Responsibility in mind"),(0,o.yg)("li",{parentName:"ul"},"Eliminate circular dependencies"),(0,o.yg)("li",{parentName:"ul"},"Avoid implicit dependencies to make your code easier to reason about"))),(0,o.yg)("li",{parentName:"ul"},"\u2764\ufe0f Developer experience",(0,o.yg)("ul",{parentName:"li"},(0,o.yg)("li",{parentName:"ul"},"Seamlessly integrates into existing projects"),(0,o.yg)("li",{parentName:"ul"},"Easy to adopt gradually"),(0,o.yg)("li",{parentName:"ul"},"Scales well"),(0,o.yg)("li",{parentName:"ul"},"Idiomatic API that's easy to understand")))),(0,o.yg)("h2",{id:"design-principles"},"Design principles"),(0,o.yg)("p",null,"React Obsidian is guided by the principles of the Dependency Injection pattern, but does not strictly follow them. We allowed ourselves a degree of freedom when designing the library in order to reduce boilerplate code and library footprint."),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("strong",{parentName:"li"},"Easy to start")," - Obsidian requires very little code to get you started. Once you declare a graph, using it to inject dependencies requires as little as two lines of code."),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("strong",{parentName:"li"},"Intuitive API")," - The API should be verbose and understandable even to new users without prior experience with Dependency Injection."),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("strong",{parentName:"li"},"Minimal boilerplate")," - Require the bare minimum in order to construct dependencies and resolve them. ")))}g.isMDXComponent=!0}}]);