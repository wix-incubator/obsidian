"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[9884],{2596:e=>{e.exports=JSON.parse('{"tag":{"label":"Architecture","permalink":"/obsidian/docs/tags/architecture","allTagsPath":"/obsidian/docs/tags","count":4,"items":[{"id":"guides/avoidingPropDrilling","title":" Avoiding prop drilling","description":"Prop Drilling is a common issue in React development where props are passed down multiple levels of the component hierarchy, making the code difficult to maintain and understand. This guide will show you how to use @lifecycleBound graphs to avoid Prop Drilling.","permalink":"/obsidian/docs/guides/avoidingPropDrilling"},{"id":"guides/configurableApplications","title":"Configurable applications","description":"Designing applications to be flexible and configurable makes them more tolerable to changing requirements. The ability to change code frequently and quickly is one of the most important KPIs of any development team. This is generally made possible by a design that facilitates small pull requests, that modify a minimal amount of code across a minimal number of files.","permalink":"/obsidian/docs/guides/configurableApplications"},{"id":"guides/mockDependencies","title":"Mocking dependencies in unit tests","description":"Tests are an integral part of any software project. They let you verify that your code works as expected and that it doesn\'t break when you make changes. We want our tests to be as clear as possible so that developers don\'t have to waste time figuring out what the test is doing our how to fix it when it fails.","permalink":"/obsidian/docs/guides/mockDependencies"},{"id":"guides/mvvm","title":"MVVM architecture with Obsidian","description":"MVVM (Model-View-ViewModel) is a software architecture widely used in modern front-end development. It emphasizes separation of concerns and improves code structure. In the Model-View-ViewModel pattern, code is organized into three layers:","permalink":"/obsidian/docs/guides/mvvm"}],"unlisted":false}}')}}]);