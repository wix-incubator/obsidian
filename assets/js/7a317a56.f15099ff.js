"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[6618],{1184:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>d});var a=t(4041);const o={},i=a.createContext(o);function r(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),a.createElement(i.Provider,{value:n},e.children)}},5451:(e,n,t)=>{t.r(n),t.d(n,{Playground:()=>c,assets:()=>s,contentTitle:()=>d,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"type":"mdx","permalink":"/obsidian/playground/","source":"@site/src/pages/playground/index.mdx","title":"Obsidian playground","description":"A live playground for Obsidian demonstrating both state and dependency management in a React application.","frontMatter":{"title":"Obsidian playground","description":"A live playground for Obsidian demonstrating both state and dependency management in a React application.","hide_table_of_contents":true},"unlisted":false}');var o=t(1085),i=t(1184);const r={title:"Obsidian playground",description:"A live playground for Obsidian demonstrating both state and dependency management in a React application.",hide_table_of_contents:!0},d="Obsidian playground",s={},c=({children:e,color:n})=>{const t={iframe:"iframe",...(0,i.R)()};return(0,o.jsx)(t.iframe,{style:{border:"1px solid rgba(0, 0, 0, 0.1)",borderRadius:"2px"},width:"100%",height:"600",src:"https://codesandbox.io/p/sandbox/obsidian-task-list-c16w8r?file=/src/App.tsx:,C11&embed=1&hidenavigation=1",allowfullscreen:!0})},l=[];function p(e){const n={a:"a",h1:"h1",header:"header",p:"p",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"obsidian-playground",children:"Obsidian playground"})}),"\n",(0,o.jsxs)(n.p,{children:["The following is a live playground for Obsidian. You can fork the code to edit it or use it as a template for your own project.\nIt's adapted from the state management example in the ",(0,o.jsx)(n.a,{href:"https://react.dev/learn/scaling-up-with-reducer-and-context",children:"React docs"})," and is meant to demonstrate how Obsidian can be used to manage both state and dependencies in a React application."]}),"\n","\n",(0,o.jsx)(c,{})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}}}]);