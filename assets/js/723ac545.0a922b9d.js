"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[5217],{2329:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>s,metadata:()=>o,toc:()=>h});var t=n(1085),i=n(1184);const s={sidebar_position:1,title:"Obsidian",tags:["Service Locator"]},a=void 0,o={id:"reference/obsidian",title:"Obsidian",description:"Obsidian exposes a set of functions that allow you to interact with the Obsidian framework imperatively.",source:"@site/docs/reference/obsidian.mdx",sourceDirName:"reference",slug:"/reference/obsidian",permalink:"/obsidian/docs/reference/obsidian",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/reference/obsidian.mdx",tags:[{inline:!0,label:"Service Locator",permalink:"/obsidian/docs/tags/service-locator"}],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Obsidian",tags:["Service Locator"]},sidebar:"reference",next:{title:"Observable",permalink:"/obsidian/docs/reference/observable"}},c={},h=[{value:"Reference",id:"reference",level:2},{value:"obtain(keyOrGraph, props?): ServiceLocator",id:"obtainkeyorgraph-props-servicelocator",level:3},{value:"Arguments",id:"arguments",level:4},{value:"Returns",id:"returns",level:4},{value:"registerGraph(key, graphGenerator)",id:"registergraphkey-graphgenerator",level:3},{value:"Arguments",id:"arguments-1",level:4},{value:"inject(target, keyOrGraph)",id:"injecttarget-keyorgraph",level:3},{value:"Arguments",id:"arguments-2",level:4}];function d(e){const r={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.code,{children:"Obsidian"})," ",(0,t.jsx)(r.strong,{children:"exposes a set of functions that allow you to interact with the Obsidian framework imperatively."})]}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.a,{href:"#reference",children:"Reference"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:(0,t.jsx)(r.a,{href:"#obtainkeyorgraph-props",children:"obtain(keyOrGraph, props?)"})}),"\n",(0,t.jsx)(r.li,{children:(0,t.jsx)(r.a,{href:"#registergraphkey-graphgenerator",children:"registerGraph(key, graphGenerator)"})}),"\n",(0,t.jsx)(r.li,{children:(0,t.jsx)(r.a,{href:"#injecttarget-keyorgraph",children:"inject(target, keyOrGraph)"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsx)(r.h2,{id:"reference",children:"Reference"}),"\n",(0,t.jsx)(r.h3,{id:"obtainkeyorgraph-props-servicelocator",children:"obtain(keyOrGraph, props?): ServiceLocator"}),"\n",(0,t.jsxs)(r.p,{children:["The ",(0,t.jsx)(r.code,{children:"obtain"})," function is used to obtain a graph instance to be used as a ",(0,t.jsx)(r.a,{href:"https://en.wikipedia.org/wiki/Service_locator_pattern",children:"service locator"}),"."]}),"\n",(0,t.jsx)(r.h4,{id:"arguments",children:"Arguments"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"keyOrGraph?"})," - The class reference of the graph or its corresponding key if it was registered with a key."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"props?"})," - An object containing props to be passed to the graph's constructor if this is the first time the graph is being instantiated."]}),"\n"]}),"\n",(0,t.jsx)(r.h4,{id:"returns",children:"Returns"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"ServiceLocator"})," - A service locator instance that can be used to resolve dependencies from the graph."]}),"\n"]}),"\n",(0,t.jsx)(r.h3,{id:"registergraphkey-graphgenerator",children:"registerGraph(key, graphGenerator)"}),"\n",(0,t.jsxs)(r.p,{children:["The ",(0,t.jsx)(r.code,{children:"registerGraph"})," function is used to register a graph generator function with a key. This allows the graph to be instantiated using the key instead of the class reference. This is useful when you want to decouple the graph's instantiation from its usage."]}),"\n",(0,t.jsx)(r.h4,{id:"arguments-1",children:"Arguments"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"key"})," - The key to register the graph with."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"graphGenerator"})," - A function that returns the graph class reference. The generator function is called only when the graph is being instantiated. It's recommended to retrieve the class reference using inline require to delay side effects until the graph is actually used."]}),"\n"]}),"\n",(0,t.jsx)(r.h3,{id:"injecttarget-keyorgraph",children:"inject(target, keyOrGraph)"}),"\n",(0,t.jsxs)(r.p,{children:["The ",(0,t.jsx)(r.code,{children:"inject"})," function is used to inject dependencies annotated with the ",(0,t.jsx)(r.code,{children:"@LateInject"})," decorator into a class instance."]}),"\n",(0,t.jsx)(r.h4,{id:"arguments-2",children:"Arguments"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"target"})," - The class instance to inject the dependencies into."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"keyOrGraph"})," - The class reference of the graph or its corresponding key if it was registered with a key."]}),"\n"]})]})}function l(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},1184:(e,r,n)=>{n.d(r,{R:()=>a,x:()=>o});var t=n(4041);const i={},s=t.createContext(i);function a(e){const r=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(s.Provider,{value:r},e.children)}}}]);